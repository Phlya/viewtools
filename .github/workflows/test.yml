name: Tests

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]
    workflow_dispatch:

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

        steps:
            - uses: actions/checkout@v4
              with:
                  # Fetch full history for setuptools-scm
                  fetch-depth: 0

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e ".[dev]"

            - name: Lint with ruff
              run: |
                  ruff check .
                  ruff format --check .

            - name: Check formatting with black
              run: |
                  black --check .

            - name: Run tests with pytest
              run: |
                  pytest --cov=viewtools --cov-report=xml --cov-report=term-missing -v

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
              with:
                  file: ./coverage.xml
                  fail_ci_if_error: true

    test-minimal:
        # Test with minimal dependencies to ensure core functionality works
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python 3.8
              uses: actions/setup-python@v4
              with:
                  python-version: "3.8"

            - name: Install minimal dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -e .
                  pip install pytest

            - name: Run core tests
              run: |
                  pytest tests/unit/test_api.py tests/unit/test_core.py -v

    package:
        # Test that the package can be built and installed
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install build dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install build twine

            - name: Build package
              run: |
                  python -m build

            - name: Check package
              run: |
                  twine check dist/*

            - name: Test installation from wheel
              run: |
                  pip install dist/*.whl
                  python -c "import viewtools; print(viewtools.__version__)"

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist/
